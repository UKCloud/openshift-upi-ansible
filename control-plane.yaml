# Required Python packages:
#
# ansible
# openstackclient
# openstacksdk
# netaddr

- import_playbook: common.yaml

- hosts: all
  gather_facts: no

  tasks:
  - name: 'Create the Control Plane ports'
    os_port:
      name: "{{ item.1 }}-{{ item.0 }}"
      network: "{{ os_network }}"
      security_groups:
      - "{{ os_sg_controlplane }}"
      - "{{ os_sg_api }}"
      - "{{ os_sg_ssh }}"
      allowed_address_pairs:
      - ip_address: "{{ os_apiVIP }}"
      - ip_address: "{{ os_ingressVIP }}"
    with_indexed_items: "{{ [os_port_controlplane] * os_cp_nodes_number }}"
    register: ports

  - name: 'Attach Pingdom API security group'
    command:
      cmd: "openstack port set --security-group {{ os_sg_api_pingdom }} {{ item.1 }}-{{ item.0 }}"
    when: apiAllowedSources[0] is defined and apiAllowedSources[0] != "0.0.0.0/0"
    with_indexed_items: "{{ [os_port_controlplane] * os_cp_nodes_number }}"
    
  - name: 'Set Control Plane ports tag'
    command:
      cmd: "openstack port set --tag {{ cluster_id_tag }} {{ item.1 }}-{{ item.0 }}"
    with_indexed_items: "{{ [os_port_controlplane] * os_cp_nodes_number }}"

  - name: 'List the Control Plane Trunks'
    command:
      cmd: "openstack network trunk list"
    when: os_networking_type == "Kuryr"
    register: control_plane_trunks

  - name: 'Create the Control Plane trunks'
    command:
      cmd: "openstack network trunk create --parent-port {{ item.1.id }} {{ os_cp_trunk_name }}-{{ item.0 }}"
    with_indexed_items: "{{ ports.results }}"
    when:
    - os_networking_type == "Kuryr"
    - "os_cp_trunk_name|string not in control_plane_trunks.stdout"

  - name: 'Create the Control Plane servers'
    os_server:
      name: "{{ item.1 }}-{{ item.0 }}"
      image: "{{ os_image_rhcos }}"
      flavor: "{{ os_flavor_controlplane }}"
      auto_ip: no
      # The ignition filename will be concatenated with the Control Plane node
      # name and its 0-indexed serial number.
      # In this case, the first node will look for this filename:
      #    "{{ infraID }}-controlplane-0-ignition.json"
      userdata: "{{ lookup('file', [item.1, item.0, 'ignition.json'] | join('-')) | string }}"
      nics:
      - port-name: "{{ os_port_controlplane }}-{{ item.0 }}"
      scheduler_hints:
        group: "{{ controlplaneGroup.id }}"
    with_indexed_items: "{{ [os_cp_server_name] * os_cp_nodes_number }}"
