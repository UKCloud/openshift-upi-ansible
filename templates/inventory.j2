all:
  hosts:
    localhost:
      ansible_connection: local
      ansible_python_interpreter: "{{ansible_playbook_python}}"

      # User-provided values
      os_subnet_range: "{{ ospSubnet }}"
      os_flavor_controlplane: 'ocp.m1.medium'
      os_flavor_worker: 'ocp.m1.medium'
      os_image_rhcos: "{{ rhcosImage }}"
{% if net2 %}
      # Net2 values
      os_net2_subnet_range: "{{ net2OspSubnet }}"
      os_net2_external_network: "{{ net2ExternalNetwork }}"
      os_net2_ingress_fip: "{{ net2IngressFIP }}"
      os_net2_ingressVIP: {% raw %}"{{ os_net2_subnet_range | next_nth_usable(7) }}"{% endraw %}

      os_net2_pri_net_router_ip: {% raw %}"{{ os_net2_subnet_range | ipaddr('last_usable') }}"{% endraw %}

{% endif %}
{% if extraGatewayForPriNet %}
      # Extra Gateway values for Primary network
      os_eg_external_network: "{{ egExternalNetworkForPriNet }}"
      os_eg_ingress_fip: "{{ egIngressFIPForPriNet }}"
      os_eg_ingressVIP: {% raw %}"{{ os_subnet_range | next_nth_usable(9) }}"{% endraw %}
{% endif %}

      # Service subnet cidr
      svc_subnet_range: '172.30.0.0/16'
      os_svc_network_range: '172.30.0.0/15'
      # Subnet pool prefixes
      cluster_network_cidrs: '10.128.0.0/14'
      # Subnet pool prefix length
      host_prefix: '23'
      # Name of the SDN.
      # Possible values are OpenshiftSDN or Kuryr.
      os_networking_type: 'OpenshiftSDN'

      # Number of provisioned Control Plane nodes
      # 3 is the minimum number for a fully-functional cluster.
      os_cp_nodes_number: 3

      # Number of provisioned Compute nodes.
      # 3 is the minimum number for a fully-functional cluster.
      os_compute_nodes_number: 3

      # The public network providing connectivity to the cluster. If not
      # provided, the cluster external connectivity must be provided in another
      # way.
      #
      # Required for os_api_fip, os_ingress_fip, os_bootstrap_fip.
      os_external_network: "{{ externalNetwork }}"

      # OpenShift API floating IP address. If this value is non-empty, the
      # corresponding floating IP will be attached to the Control Plane to
      # serve the OpenShift API.
      os_api_fip: "{{ apiFIP }}"

      # OpenShift Ingress floating IP address. If this value is non-empty, the
      # corresponding floating IP will be attached to the worker nodes to serve
      # the applications.
      os_ingress_fip: "{{ ingressFIP }}"

      # If this value is non-empty, the corresponding floating IP will be
      # attached to the bootstrap machine. This is needed for collecting logs
      # in case of install failure.
      os_bootstrap_fip: "{{ bootstrapFIP }}"

      # An IP address that will be assigned to the API VIP.
      # Be aware that the 10 and 11 of the machineNetwork will
      # be taken by neutron dhcp by default, and wont be available.
      os_apiVIP: {% raw %}"{{ os_subnet_range | next_nth_usable(5) }}"{% endraw %}

      # An IP address that will be assigned to the ingress VIP.
      # Be aware that the 10 and 11 of the machineNetwork will
      # be taken by neutron dhcp by default, and wont be available.
      os_ingressVIP: {% raw %}"{{ os_subnet_range | next_nth_usable(7) }}"{% endraw %}
